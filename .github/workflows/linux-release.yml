name: linux-release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build on Linux
    container: node:alpine
    runs-on: ubuntu-20.04
    env:
      RUST_BACKTRACE: "full"
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
        with:
          key: ubuntu-latest
      - name: Build
        env:
          RUSTFLAGS: "-C link-arg=-s"
        run: |
          cargo build --release --locked
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary
          path: target/release/polyglot_code_scanner
  test:
    name: Test on Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v1
        with:
          key: ubuntu-latest
      - name: Test
        run: |
          cargo fmt -- --check
          cargo clippy --release
          cargo test --release --locked
  release:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Restore artifact from previous job
        uses: actions/download-artifact@v3
        with:
          name: binary
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: polyglot_code_scanner
          asset_name: polyglot-code-scanner-x86_64-linux
          tag: ${{ github.ref }}
          overwrite: true
      - uses: actions/checkout@v2
